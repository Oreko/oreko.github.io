[{"authors":["admin"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1590297686,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://oreko.github.io/author/ian-mcquoid/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/ian-mcquoid/","section":"authors","summary":"","tags":null,"title":"Ian McQuoid","type":"authors"},{"authors":["Ian McQuoid","Mike Rosulek","Lawrence Roy"],"categories":null,"content":"","date":1598572800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1599198352,"objectID":"02746dab15332c7dc6697c9f1957086d","permalink":"https://oreko.github.io/publication/minimal_pake_ot/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/minimal_pake_ot/","section":"publication","summary":"We present a generalization of the seminal EKE protocol to achieve a minimal (in communication flows and exponentiations) sPAKE in the UC model using a primitive we call programmable-once public function (POPF). Intuitively, a POPF is a function whose output can be programmed by one party on exactly one point. All other outputs of the function are outside of any party's control. We also use this primitive to achieve a UC-secure 1-out-of-$N$ oblivious tranfer protocol.","tags":["Cryptography","CCS","Publications"],"title":"Minimal Symmetric PAKE and 1-out-of-N OT from Programmable-Once Public Functions","type":"publication"},{"authors":["Ian McQuoid","Trevor Swope","Mike Rosulek"],"categories":null,"content":"","date":1574380800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590369914,"objectID":"447cdbc7befa60219ca0d622f8da863b","permalink":"https://oreko.github.io/publication/preimage_linicrypt/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/preimage_linicrypt/","section":"publication","summary":"We give a characterization implying that collision-resistance and second-preimage resistance are equivalent, in an asymptotic sense, for a class of Linicrypt programs. Furthermore, there is a polynomial-time procedure for determining whether such a Linicrypt program is collision/second-preimage resistant.","tags":["Cryptography","TCC","Publications"],"title":"Characterizing Collision and Second-Preimage Resistance in Linicrypt","type":"publication"}]