[{"authors":["admin"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1616178009,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://oreko.github.io/author/ian-mcquoid/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/ian-mcquoid/","section":"authors","summary":"","tags":null,"title":"Ian McQuoid","type":"authors"},{"authors":["Ian McQuoid","Mike Rosulek","Lawrence Roy"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622141778,"objectID":"8947ce3528fd2c6e6fd7c4ca9dc3549a","permalink":"https://oreko.github.io/publication/batching_ot/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/batching_ot/","section":"publication","summary":"Many known libraries and papers on oblivious transfer either mistreat or ignore the issue of message reuse in multi-instance protocols. We provide a treatment of how to properly batch recent 2-round oblivious transfer protocols which are of import for multiparty computation which often relies on oblivious transfer extension built upon batch OT. We also abstract the recent endemic OT protocol of Masny and Rindal and show that it is, in fact, an instance of the OT protocol described by McQuoid, Rosulek, and Roy in their CCS2020 paper. We further provide optimizations for such POPF protocols and extend the list of known POPF constructions including a very simple OT protocol that may have pedagogical interest.","tags":["Cryptography","OT","ePrint","Publications"],"title":"Batching Base Oblivious Transfers","type":"publication"},{"authors":["Ian McQuoid","Mike Rosulek","Lawrence Roy"],"categories":null,"content":"","date":1598572800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621964950,"objectID":"02746dab15332c7dc6697c9f1957086d","permalink":"https://oreko.github.io/publication/minimal_pake_ot/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/minimal_pake_ot/","section":"publication","summary":"We present a generalization of the seminal EKE protocol to achieve a minimal (in communication flows and exponentiations) sPAKE in the UC model using a primitive we call programmable-once public function (POPF). Intuitively, a POPF is a function whose output can be programmed by one party on exactly one point. All other outputs of the function are outside of any party's control. We also use this primitive to achieve a UC-secure 1-out-of-$N$ oblivious tranfer protocol.","tags":["Cryptography","OT","PAKE","CCS","Publications"],"title":"Minimal Symmetric PAKE and 1-out-of-N OT from Programmable-Once Public Functions","type":"publication"},{"authors":["Ian McQuoid","Trevor Swope","Mike Rosulek"],"categories":null,"content":"","date":1574380800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621964950,"objectID":"447cdbc7befa60219ca0d622f8da863b","permalink":"https://oreko.github.io/publication/preimage_linicrypt/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/preimage_linicrypt/","section":"publication","summary":"We give a characterization implying that collision-resistance and second-preimage resistance are equivalent, in an asymptotic sense, for a class of Linicrypt programs. Furthermore, there is a polynomial-time procedure for determining whether such a Linicrypt program is collision/second-preimage resistant.","tags":["Cryptography","Linicrypt","TCC","Publications"],"title":"Characterizing Collision and Second-Preimage Resistance in Linicrypt","type":"publication"}]